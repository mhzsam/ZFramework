// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250822143709_super_admin")]
    partial class super_admin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entites.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionMethod")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InsertBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivee")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("PermissionHash")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Domain.Entites.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InsertBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rols");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 166, DateTimeKind.Local).AddTicks(1537),
                            IsActive = true,
                            IsDeleted = false,
                            RoleName = "SuperAdmin"
                        },
                        new
                        {
                            Id = 1,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 166, DateTimeKind.Local).AddTicks(1784),
                            IsActive = true,
                            IsDeleted = false,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 166, DateTimeKind.Local).AddTicks(1914),
                            IsActive = true,
                            IsDeleted = false,
                            RoleName = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 166, DateTimeKind.Local).AddTicks(2037),
                            IsActive = true,
                            IsDeleted = false,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("Domain.Entites.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InsertBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 8, 22, 18, 7, 8, 803, DateTimeKind.Local).AddTicks(9697));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("Domain.Entites.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("ForceChanePassword")
                        .HasColumnType("bit");

                    b.Property<int>("InsertBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 8, 22, 18, 7, 8, 803, DateTimeKind.Local).AddTicks(7439));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmailAddress = "user1@test.com",
                            FirstName = "Mohammad",
                            ForceChanePassword = false,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(1092),
                            IsActive = false,
                            IsDeleted = false,
                            LastName = "Zarrabi",
                            MobileNumber = "09120198177",
                            Password = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"
                        },
                        new
                        {
                            Id = 2,
                            EmailAddress = "user2@test.com",
                            FirstName = "Ali",
                            ForceChanePassword = false,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(1504),
                            IsActive = false,
                            IsDeleted = false,
                            LastName = "Rezaei",
                            MobileNumber = "09120000002",
                            Password = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"
                        },
                        new
                        {
                            Id = 3,
                            EmailAddress = "user3@test.com",
                            FirstName = "Sara",
                            ForceChanePassword = false,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(1853),
                            IsActive = false,
                            IsDeleted = false,
                            LastName = "Ahmadi",
                            MobileNumber = "09120000003",
                            Password = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"
                        },
                        new
                        {
                            Id = 4,
                            EmailAddress = "user4@test.com",
                            FirstName = "Hossein",
                            ForceChanePassword = false,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(2228),
                            IsActive = false,
                            IsDeleted = false,
                            LastName = "Karimi",
                            MobileNumber = "09120000004",
                            Password = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"
                        },
                        new
                        {
                            Id = 5,
                            EmailAddress = "user5@test.com",
                            FirstName = "Mina",
                            ForceChanePassword = false,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(2562),
                            IsActive = false,
                            IsDeleted = false,
                            LastName = "Rahimi",
                            MobileNumber = "09120000005",
                            Password = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"
                        },
                        new
                        {
                            Id = 6,
                            EmailAddress = "user6@test.com",
                            FirstName = "Reza",
                            ForceChanePassword = false,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(2897),
                            IsActive = false,
                            IsDeleted = false,
                            LastName = "Akbari",
                            MobileNumber = "09120000006",
                            Password = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"
                        },
                        new
                        {
                            Id = 7,
                            EmailAddress = "user7@test.com",
                            FirstName = "Neda",
                            ForceChanePassword = false,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(3231),
                            IsActive = false,
                            IsDeleted = false,
                            LastName = "Moradi",
                            MobileNumber = "09120000007",
                            Password = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"
                        },
                        new
                        {
                            Id = 8,
                            EmailAddress = "user8@test.com",
                            FirstName = "Hamed",
                            ForceChanePassword = false,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(3576),
                            IsActive = false,
                            IsDeleted = false,
                            LastName = "Kazemi",
                            MobileNumber = "09120000008",
                            Password = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"
                        },
                        new
                        {
                            Id = 9,
                            EmailAddress = "user9@test.com",
                            FirstName = "Maryam",
                            ForceChanePassword = false,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(3908),
                            IsActive = false,
                            IsDeleted = false,
                            LastName = "Shahbazi",
                            MobileNumber = "09120000009",
                            Password = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"
                        },
                        new
                        {
                            Id = 10,
                            EmailAddress = "user10@test.com",
                            FirstName = "Farid",
                            ForceChanePassword = false,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(4260),
                            IsActive = false,
                            IsDeleted = false,
                            LastName = "Taheri",
                            MobileNumber = "09120000010",
                            Password = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4"
                        });
                });

            modelBuilder.Entity("Domain.Entites.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InsertBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 8, 22, 18, 7, 8, 803, DateTimeKind.Local).AddTicks(8791));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRols");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(6791),
                            IsDeleted = false,
                            RoleId = -1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(7013),
                            IsDeleted = false,
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(7162),
                            IsDeleted = false,
                            RoleId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(7297),
                            IsDeleted = false,
                            RoleId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(7439),
                            IsDeleted = false,
                            RoleId = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 6,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(7583),
                            IsDeleted = false,
                            RoleId = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 7,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(7724),
                            IsDeleted = false,
                            RoleId = 2,
                            UserId = 6
                        },
                        new
                        {
                            Id = 8,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(7872),
                            IsDeleted = false,
                            RoleId = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 9,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(8040),
                            IsDeleted = false,
                            RoleId = 3,
                            UserId = 8
                        },
                        new
                        {
                            Id = 10,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(8179),
                            IsDeleted = false,
                            RoleId = 3,
                            UserId = 9
                        },
                        new
                        {
                            Id = 11,
                            InsertBy = 0,
                            InsertDate = new DateTime(2025, 8, 22, 18, 7, 9, 167, DateTimeKind.Local).AddTicks(8323),
                            IsDeleted = false,
                            RoleId = 2,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("Domain.Entites.RolePermission", b =>
                {
                    b.HasOne("Domain.Entites.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entites.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Domain.Entites.UserRole", b =>
                {
                    b.HasOne("Domain.Entites.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entites.User", "user")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Domain.Entites.Role", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("Domain.Entites.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
